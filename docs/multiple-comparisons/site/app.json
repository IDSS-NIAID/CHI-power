[{"name":"app.R","content":"library(shiny)\nlibrary(bslib)\n\nlibrary(dplyr)\n\nlibrary(ggplot2)\nlibrary(RColorBrewer)\nlibrary(cowplot)\ntheme_set(theme_cowplot())\n\nsource('../PowerConsiderations.R')\n\n# build shiny app with shinylive (within the root directory)\n# shinylive::export('docs/multiple-comparisons', 'docs/multiple-comparisons/site')\n\n\nui <- page_sidebar(\n  title = 'Multiple testing',\n  sidebar = sidebar(\n    # parameters for the illustration\n    sliderInput('typeI_error',               'FW-Î±',        0.05, min = 0.001, max =    0.1             ), # significance level\n    sliderInput('effect_size',        'Effect size', c(1.5, 4  ), min = 1    , max =    5   , step = 0.5), # effect size\n    sliderInput(         'sd',                 'SD',        1.5 , min = 0.1  , max =    3               ), # variability\n    sliderInput(    'n_range',  'Sample size range', c(3, 400  ), min = 3    , max =  500               ), # sample size\n    sliderInput( 'n_analytes', 'Number of analytes',     7267   , min = 1    , max = 7267               ), # number of analytes\n    sliderInput(      'power',              'Power',        0.8 , min = 0.5  , max =    1               )  # line for power\n  ),\n\n  card(\n    plotOutput('power_multiple')\n  )\n)\n\nserver <- function(input, output)\n{\n  delta       <- reactive({input$effect_size})\n  sd          <- reactive({input$sd         })\n  alpha       <- reactive({input$typeI_error})\n  power       <- reactive({input$power      })\n  n_range     <- reactive({input$n_range    })\n  n_analytes  <- reactive({input$n_analytes })\n\n  ncurves <- reactive({ifelse(delta()[1] == delta()[2], 1, 3)})\n\n  output$power_multiple <- renderPlot({\n    tibble(n     = rep(seq(   n_range()[1] ,    n_range()[2] , 1), ncurves()),\n           delta = rep(seq(log2(delta()[1]), log2(delta()[2]), length.out = ncurves()), each = length(n) / ncurves()),\n           power = power.t.test(n,\n                                delta,\n                                sd(),\n                                alpha() / n_analytes())$power) %>%\n\n      mutate(delta = as.factor(round(2^delta, 1))) %>%\n\n      ggplot(aes(n, power, color = delta, linetype = delta)) +\n      geom_line() +\n      geom_hline(yintercept = power(), linetype = 'dashed') +\n\n      labs(x = 'Sample Size', y = 'Power') +\n      theme_cowplot() +\n      scale_color_brewer(palette = 'Set1')\n  })\n}\n\nshinyApp(ui = ui, server = server)\n","type":"text"}]
